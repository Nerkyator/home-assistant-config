#############################################################
# Presence automations
#############################################################

# Empty home automation when no one of the Familia group is at home
- alias: 'Empty home'
  trigger:
    platform: state
    entity_id: group.unidad_familiar
    state: 'not_home'
  action:
    - service: script.turn_on
      data:
        entity_id: script.empty_home

# Someone home automation when someone of the Familia group is at home
- alias: 'Someone home'
  trigger:
    platform: state
    entity_id: group.unidad_familiar
    state: 'home'
  action:
    - service: script.turn_on
      data:
        entity_id: script.someone_home

# When input_boolean.empty_home_activation_delay turns on,
# Change virtual_device location to home
# Wait the specified amount of minutes 
# Turn off input_boolean.empty_home_activation_delay
- alias: 'empty_home_activation_delay on'
  trigger:
    platform: state
    entity_id: input_boolean.empty_home_activation_delay
    state: 'on'
  action:
    - service: device_tracker.see
      data:
        dev_id: 'virtual_device'
        location_name: 'home'
    - delay: '{{ (states.input_slider.empty_home_activation_delay_minutes.state | int) // 60 }}:{{ (states.input_slider.empty_home_activation_delay_minutes.state | int) % 60 }}'
    - service: homeassistant.turn_off
      data:
        entity_id: input_boolean.empty_home_activation_delay

# When input_boolean.empty_home_activation_delay turns off,
# Change virtual_device location to not_home
- alias: 'empty_home_activation_delay off'
  trigger:
    platform: state
    entity_id: input_boolean.empty_home_activation_delay
    state: 'off'
  action:
    - service: device_tracker.see
      data:
        dev_id: 'virtual_device'
        location_name: 'not_home'

#############################################################
# Heating automations
#############################################################

# When the switch.heating changes to on
- alias: 'Heating on'
  trigger:
    platform: state
    entity_id: switch.heating
    state: 'on'
  action:
    # Turn on thermostat
    - service: script.turn_on
      entity_id: script.power_on_thermostat

# When the switch.heating changes to off
- alias: 'Heating off'
  trigger:
    platform: state
    entity_id: switch.heating
    state: 'off'
  action:
    # Turn off thermostat
    - service: script.turn_on
      entity_id: script.power_off_thermostat

# Enters on holiday mode
- alias: 'Enter holiday mode'
  trigger:
    platform: state
    entity_id: switch.holiday
    state: 'on'
  condition:
    condition: state
    entity_id: switch.heating
    state: 'on'
  action:
    # Turn off thermostat
    - service: script.turn_on
      entity_id: script.power_off_thermostat

# Exit on holiday mode
- alias: 'Exit holiday mode'
  trigger:
    platform: state
    entity_id: switch.holiday
    state: 'off'
  condition:
    condition: state
    entity_id: switch.heating
    state: 'on'
  action:
    # Turn on thermostat an set it to away mode
    service: climate.set_away_mode
    entity_id: climate.termostato
    data:
      away_mode: true

#############################################################
# Alarm automations
#############################################################

# Disable alarm for recibidor after 15 seconds of detection
- alias: 'Disable alarm for recibidor'
  trigger:
    platform: state
    entity_id: binary_sensor.cam_hall_alarm
    state: 'on'
  action:
    - delay:
        seconds: 15
    - service: mqtt.publish
      data:
        payload: 0
        retain: true
        topic: 'home/camera/recibidor/alarm'

# Disable alarm for piscina after 15 seconds of detection
- alias: 'Disable alarm for piscina'
  trigger:
    platform: state
    entity_id: binary_sensor.cam_swimmingpool_alarm
    state: 'on'
  action:
    - delay:
        seconds: 15
    - service: mqtt.publish
      data:
        payload: 0
        retain: true
        topic: 'home/camera/piscina/alarm'

# Disable alarm for caseta after 15 seconds of detection
- alias: 'Disable alarm for caseta'
  trigger:
    platform: state
    entity_id: binary_sensor.cam_caseta_alarm
    state: 'on'
  action:
    - delay:
        seconds: 15
    - service: mqtt.publish
      data:
        payload: 0
        retain: true
        topic: 'home/camera/caseta/alarm'

#############################################################
# Light automations
#############################################################

# On turn on outside lights, adjust brightness
- alias: 'Luces exteriores on turn on - Adjust Brightness'
  trigger:
    platform: state
    entity_id: group.luces_exteriores
    state: 'on'
  action:
    - service: light.turn_on
      data_template:
        entity_id: group.luces_exteriores
        brightness: '{{ ((states.input_slider.luces_exteriores_brightness.state | int) * 255) // 100 }}'

# Adjust luces exteriores brightness
- alias: 'Luces exteriores - Adjust Brightness'
  trigger:
    platform: state
    entity_id: input_slider.luces_exteriores_brightness
  condition:
    condition: state
    entity_id: group.luces_exteriores
    state: 'on'
  action:
    - service: light.turn_on
      data_template:
        entity_id: group.luces_exteriores
        brightness: '{{ ((trigger.to_state.state | int) * 255) // 100 }}'

# Turn on outside lights at sunset (+15 minutes)
- alias: 'Sunset Lights'
  trigger:
    platform: sun
    event: 'sunset'
    offset: '00:15:00'
  action:
    - service: light.turn_on
      data_template:
        entity_id: group.luces_exteriores
        brightness: '{{ ((states.input_slider.luces_exteriores_brightness.state | int) * 255) // 100 }}'

# Turn off outside lights at night (at 00:15)
- alias: 'Turn off lights at night'
  trigger:
    platform: time
    after: '00:15'
  condition:
    condition: state
    entity_id: group.luces_exteriores
    state: 'on'
  action:
    service: light.turn_off
    entity_id: group.luces_exteriores
  
# When the outside lights have been turned on at late night (later than 00:15) and before 9AM, turn them off after 5 minutes
- alias: 'Turn off lights at late night'
  trigger:
    platform: state
    entity_id: group.luces_exteriores
    state: 'on'
  condition:
    - condition: time
      after: '00:15'
      before: '9:00'
    - condition: state
      entity_id: group.luces_exteriores
      state: 'on'
  action:
    - delay:
        minutes: 5
    - service: light.turn_off
      data:
        entity_id: group.luces_exteriores

# Turn off outside lights after 10 seconds when the sun is not set
- alias: 'Turn off lights when sun not set'
  trigger:
    platform: state
    entity_id: group.luces_exteriores
    state: 'on'
  condition:
    - condition: sun
      after: sunrise
    - condition: sun
      before: sunset
  action:
    - delay:
        seconds: 10
    - service: light.turn_off
      data:
        entity_id: group.luces_exteriores

# Turn on outside lights when fence is opened and the sun is set.
- alias: 'Turn on lights when fence open'
  trigger:
    platform: state
    entity_id: sensor.fence_status
    state: 'Abierta'
  condition:
    condition: or
    conditions:
    - condition: sun
      after: sunset
    - condition: sun
      before: sunrise
  action:
    - service: light.turn_on
      data_template:
        entity_id: group.luces_exteriores
        brightness: '{{ ((states.input_slider.luces_exteriores_brightness.state | int) * 255) // 100 }}'

#############################################################
# Power automations
#############################################################

# Notify if a power cut detected
- alias: 'Notify power cut'
  trigger:
    platform: state
    entity_id: sensor.ups_status
    to: 'Usando batería'
  action:
    service: notify.telegram
    data:
      message: 'Corte en el suministro eléctrico detectado'

# Notify when the power is back normal
- alias: 'Notify power ok'
  trigger:
    platform: state
    entity_id: sensor.ups_status
    from: 'Usando batería'
    to: 'Con corriente'
  action:
    service: notify.telegram
    data:
      message: 'Suministro eléctrico reestablecido'

# Notify when the UPS battery has to be replaced
- alias: 'Notify ups battery replacement'
  trigger:
    platform: mqtt
    topic: 'home/ups/status'
    payload: 'RPLBATT'
  action:
    service: notify.telegram
    data:
      message: 'Batería del SAI agotándose, reemplazar'

#############################################################
# Fence automations
#############################################################

# Notify if fence is open form more than 4 minutes
- alias: 'Notify fence open'
  trigger:
    platform: state
    entity_id: sensor.fence_status
    from: 'Cerrada'
    to: 'Abierta'
    for:
      minutes: 10
  action:
    service: notify.telegram
    data:
      message: 'Barrera abierta durante más de 10 minutos'

#############################################################
# Swimming pool turn on
# In the morning at 7:00
# In the afternoon at 20:00
#############################################################

# Turn on swimming pool pump [morning]
- alias: 'Turn on swimming pool pump [morning]'
  trigger:
    platform: time
    after: '07:00:00'
  action:
    service: switch.turn_on
    entity_id: switch.piscina

# Turn on swimming pool pump [afternoon]
- alias: 'Turn on swimming pool pump [afternoon]'
  trigger:
    platform: time
    after: '20:00:00'
  action:
    service: switch.turn_on
    entity_id: switch.piscina

#############################################################
# Swimming pool turn off

# In the morning while winter at 8:00
# In the afternoon while winter at 21:00

# In the morning while spring or autumn at 10:00
# In the afternoon while spring or autumn at 22:00

# In the morning while summer at 11:00
# In the afternoon while summer at 23:00
#############################################################

# Turn off swimming pool pump [morning / Winter]
- alias: 'Turn off swimming pool pump [morning / Winter]'
  trigger:
    platform: time
    after: '08:00:00'
  condition:
    - condition: state
      entity_id: sensor.season
      state: 'Winter'
  action:
    service: switch.turn_off
    entity_id: switch.piscina

# Turn off swimming pool pump [afternoon / Winter]
- alias: 'Turn off swimming pool pump [afternoon / Winter]'
  trigger:
    platform: time
    after: '21:00:00'
  condition:
    - condition: state
      entity_id: sensor.season
      state: 'Winter'
  action:
    service: switch.turn_off
    entity_id: switch.piscina

# Turn off swimming pool pump [morning / Spring - Autumn]
- alias: 'Turn off swimming pool pump [morning / Spring - Autumn]'
  trigger:
    platform: time
    after: '09:00:00'
  condition:
    condition: or
    conditions:
    - condition: state
      entity_id: sensor.season
      state: 'Spring'
    - condition: state
      entity_id: sensor.season
      state: 'Autumn'
  action:
    service: switch.turn_off
    entity_id: switch.piscina

# Turn off swimming pool pump [afternoon / Spring - Autumn]
- alias: 'Turn off swimming pool pump [afternoon / Spring - Autumn]'
  trigger:
    platform: time
    after: '22:00:00'
  condition:
    condition: or
    conditions:
    - condition: state
      entity_id: sensor.season
      state: 'Spring'
    - condition: state
      entity_id: sensor.season
      state: 'Autumn'
  action:
    service: switch.turn_off
    entity_id: switch.piscina

# Turn off swimming pool pump [morning / Summer]
- alias: 'Turn off swimming pool pump [morning / Summer]'
  trigger:
    platform: time
    after: '10:00:00'
  condition:
    - condition: state
      entity_id: sensor.season
      state: 'Summer'
  action:
    service: switch.turn_off
    entity_id: switch.piscina

# Turn off swimming pool pump [afternoon / Summer]
- alias: 'Turn off swimming pool pump [afternoon / Summer]'
  trigger:
    platform: time
    after: '23:00:00'
  condition:
    - condition: state
      entity_id: sensor.season
      state: 'Summer'
  action:
    service: switch.turn_off
    entity_id: switch.piscina

#############################################################
# Other automations
#############################################################

- alias: 'Notify bitcoin price above threshold'
  trigger:
    platform: numeric_state
    entity_id: sensor.exchange_rate_1_btc
    above: 670
  action:
    service: notify.telegram
    data_template:
      message: >
        Bitcoin ha llegado a un valor de {{states.sensor.exchange_rate_1_btc.state}} {{states.sensor.exchange_rate_1_btc.attributes.unit_of_measurement}}

- alias: 'Notify for every new device'
  trigger:
    platform: event
    event_type: device_tracker_new_device
  action:
    - service: notify.telegram
      data_template:
        message: >
          Nuevo dispositivo encontrado {{ trigger.event.data }}

#############################################################
# Swarm automations
#############################################################

## Check in at school
#- alias: 'Checkin at Colegio'
#  trigger:
#    platform: zone
#    entity_id: device_tracker.hokusphone_hokusphone
#    zone: zone.colegio
#    event: enter
#  action:
#    service: foursquare.checkin
#    data:
#      venueId: !secret foursquare_colegio_venue_id
## Check in at oficina
#- alias: 'Checkin at Oficina'
#  trigger:
#    platform: zone
#    entity_id: device_tracker.hokusphone_hokusphone
#    zone: zone.colegio
#    event: enter
#  action:
#    service: foursquare.checkin
#    data:
#      venueId: !secret foursquare_office_venue_id